version: "3.7"

services:
  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:preview
    restart: unless-stopped
    networks:
      - traefik-network
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    dns:
      - 1.1.1.1
      - 1.0.0.1
    volumes:
      - ${SONARR_CNF}:/config
      - ${DOWNLOADS_DIR}:/downloads
      - ${MEDIA_DIR}/tv:/tv
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
      - traefik.http.routers.sonarr.middlewares=sso,basic
      - traefik.http.routers.sonarr.tls=true
      - traefik.http.routers.sonarr.tls.certresolver=cfdns
      - sui.enbaled=true
      - sui.name=tv-sonarr
      - sui-icon=tv

  radarr:
    container_name: radarr
    image: linuxserver/radarr:preview
    restart: unless-stopped
    networks:
      - traefik-network
    dns:
      - 1.1.1.1
      - 1.0.0.1
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${RADARR_CNF}:/config
      - ${DOWNLOADS_DIR}:/downloads
      - ${MEDIA_DIR}/movies:/movies
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)
      - traefik.http.services.radarr.loadbalancer.server.port=7878
      - traefik.http.routers.radarr.middlewares=sso,basic
      - traefik.http.routers.radarr.tls=true
      - traefik.http.routers.radarr.tls.certresolver=cfdns
      - sui.enbaled=true
      - sui.name=movies-radarr
      - sui-icon=film

  lidarr:
    container_name: lidarr
    image: linuxserver/lidarr:latest
    restart: unless-stopped
    networks:
      - traefik-network
    dns:
      - 1.1.1.1
      - 1.0.0.1
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${LIDARR_CNF}:/config
      - ${DOWNLOADS_DIR}:/downloads
      - ${MEDIA_DIR}/music:/music
    labels:
      - traefik.enable=true
      - traefik.http.routers.lidarr.rule=Host(`lidarr.${DOMAIN}`)
      - traefik.http.services.lidarr.loadbalancer.server.port=8686
      - traefik.http.routers.lidarr.middlewares=sso,basic
      - traefik.http.routers.lidarr.tls=true
      - traefik.http.routers.lidarr.tls.certresolver=cfdns
      - sui.enbaled=true
      - sui.name=music-lidarr
      - sui-icon=music

  tdarr:
    container_name: tdarr
    image: haveagitgat/tdarr_aio:qsv
    restart: unless-stopped
    privileged: true
    devices:
      - /dev/dri:/dev/dri
    networks:
      - traefik-network
    volumes:
      - ${TDARR_DATA}:/home/Tdarr/Documents/Tdarr
      - ${TDARR_DB}:/var/lib/mongodb
      - ${MEDIA_DIR}:/home/Tdarr/media
      - ${TRANSCODE_CACHE}:/home/Tdarr/cache
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - traefik.enable=true
      - traefik.http.routers.tdarr.entrypoints=websecure
      - traefik.http.routers.tdarr.rule=Host(`transcode.${DOMAIN}`)
      - traefik.http.services.tdarr.loadbalancer.server.port=8265
      - traefik.http.routers.tdarr.middlewares=sso,basic
      - traefik.http.routers.tdarr.tls=true
      - traefik.http.routers.tdarr.tls.certresolver=cfdns

  overseerr:
    container_name: overseerr
    image: sctx/overseerr
    restart: unless-stopped
    networks:
      - default
      - traefik-network
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - LOG_LEVEL=info
    volumes:
      - ${OVERSEERR_CNF}:/app/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.overseerr.rule=Host(`request.${DOMAIN}`,`requests.${DOMAIN}`)
      - traefik.http.services.overseerr.loadbalancer.server.port=5055
      - traefik.http.routers.overseerr.middlewares=basic
      - traefik.http.routers.overseerr.tls=true
      - traefik.http.routers.overseerr.tls.certresolver=cfdns
      - sui.enbaled=true
      - sui.name=media requests

  requestrr:
    container_name: requestrr
    image: darkalfx/requestrr:latest
    restart: unless-stopped
    networks:
      - default
      - traefik-network
    volumes:
      - ${REQUESTRR_CNF}:/root/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.requestrr.rule=Host(`requestrr.${DOMAIN}`)
      - traefik.http.services.requestrr.loadbalancer.server.port=4545
      - traefik.http.routers.requestrr.middlewares=basic
      - traefik.http.routers.requestrr.tls=true
      - traefik.http.routers.requestrr.tls.certresolver=cfdns

networks:
  traefik-network:
    external: true
  default:
    driver: bridge
